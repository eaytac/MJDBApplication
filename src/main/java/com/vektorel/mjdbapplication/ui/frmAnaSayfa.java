/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vektorel.mjdbapplication.ui;

import com.vektorel.mjdbapplication.data.Kullanici;
import com.vektorel.mjdbapplication.data.Ogrenci;
import com.vektorel.mjdbapplication.data.VeritabaniIslemleri;
import com.vektorel.mjdbapplication.sql.OgrenciSql;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Emre
 */
public class frmAnaSayfa extends javax.swing.JFrame {

    Kullanici kullanici;
    /**
     * Creates new form frmAnaSayfa
     */
    public frmAnaSayfa(Kullanici kullanici) {
        initComponents();
        setLocationRelativeTo(null);
        this.kullanici = kullanici;
        lblMesaj.setText("Hoşgeldin " + kullanici.getAdSoyad());
        tabloyuDoldur();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMesaj = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOgrenciler = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuOgrenciIslemleri = new javax.swing.JMenu();
        mnuOgrenciEkle = new javax.swing.JMenuItem();
        mnuOgrenciDuzelt = new javax.swing.JMenuItem();
        mnuOgrenciSil = new javax.swing.JMenuItem();
        mnuKullaniciIslemleri = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnuOturumuKapat = new javax.swing.JMenuItem();
        mnuCikis = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblMesaj.setText("Hoşgeldin ...");

        tblOgrenciler.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblOgrenciler);

        mnuOgrenciIslemleri.setText("Öğrenci İşlemleri");

        mnuOgrenciEkle.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        mnuOgrenciEkle.setText("Yeni Öğrenci Ekle");
        mnuOgrenciEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOgrenciEkleActionPerformed(evt);
            }
        });
        mnuOgrenciIslemleri.add(mnuOgrenciEkle);

        mnuOgrenciDuzelt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        mnuOgrenciDuzelt.setText("Öğrenci Bilgilerini Güncelle");
        mnuOgrenciDuzelt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOgrenciDuzeltActionPerformed(evt);
            }
        });
        mnuOgrenciIslemleri.add(mnuOgrenciDuzelt);

        mnuOgrenciSil.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        mnuOgrenciSil.setText("Öğrenci Sil");
        mnuOgrenciSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOgrenciSilActionPerformed(evt);
            }
        });
        mnuOgrenciIslemleri.add(mnuOgrenciSil);

        jMenuBar1.add(mnuOgrenciIslemleri);

        mnuKullaniciIslemleri.setText("Kullanıcı İşlemleri");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Kullanıcıları Listele");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mnuKullaniciIslemleri.add(jMenuItem1);

        jMenuBar1.add(mnuKullaniciIslemleri);

        jMenu2.setText("Kapat");

        mnuOturumuKapat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        mnuOturumuKapat.setText("Oturumu Kapat");
        mnuOturumuKapat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOturumuKapatActionPerformed(evt);
            }
        });
        jMenu2.add(mnuOturumuKapat);

        mnuCikis.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        mnuCikis.setText("Çıkış");
        mnuCikis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCikisActionPerformed(evt);
            }
        });
        jMenu2.add(mnuCikis);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblMesaj)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 906, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMesaj))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuCikisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCikisActionPerformed
        int secim = JOptionPane.showConfirmDialog(rootPane, "Çıkmak istiyor musunuz?", "Çıkış", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (secim == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_mnuCikisActionPerformed

    private void mnuOgrenciSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOgrenciSilActionPerformed
        ogrenciSil();
    }//GEN-LAST:event_mnuOgrenciSilActionPerformed

    private void mnuOgrenciDuzeltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOgrenciDuzeltActionPerformed
        ogrenciGuncelle();
    }//GEN-LAST:event_mnuOgrenciDuzeltActionPerformed

    private void mnuOgrenciEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOgrenciEkleActionPerformed
        ogrenciEkle();
    }//GEN-LAST:event_mnuOgrenciEkleActionPerformed

    private void mnuOturumuKapatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOturumuKapatActionPerformed
        oturumuKapat();
    }//GEN-LAST:event_mnuOturumuKapatActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        kullanicilariListele();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMesaj;
    private javax.swing.JMenuItem mnuCikis;
    private javax.swing.JMenu mnuKullaniciIslemleri;
    private javax.swing.JMenuItem mnuOgrenciDuzelt;
    private javax.swing.JMenuItem mnuOgrenciEkle;
    private javax.swing.JMenu mnuOgrenciIslemleri;
    private javax.swing.JMenuItem mnuOgrenciSil;
    private javax.swing.JMenuItem mnuOturumuKapat;
    private javax.swing.JTable tblOgrenciler;
    // End of variables declaration//GEN-END:variables

    protected void tabloyuDoldur() {
        
        OgrenciSql ogrenciSql = new OgrenciSql();
        List<Ogrenci> ogrenciler = ogrenciSql.getir();
        String[][] data = new String[ogrenciler.size()][6];
        
        for (int i=0; i<ogrenciler.size(); i++){
            data[i][0]=ogrenciler.get(i).getId().toString();
            data[i][1]=ogrenciler.get(i).getOkulNo();
            data[i][2]=ogrenciler.get(i).getAd();
            data[i][3]=ogrenciler.get(i).getSoyad();
            data[i][4]=ogrenciler.get(i).getBolumAdi();
            data[i][5]=String.valueOf(ogrenciler.get(i).getYas());
            
        }
        tblOgrenciler.setModel(new javax.swing.table.DefaultTableModel(
            data,
            new String [] {
                "No", "Okul No", "Adı", "Soyadı", "Bölüm Adı", "Yaş"
            }
        ));
    }
    
    private void ogrenciSil(){
        
        VeritabaniIslemleri veritabaniIslemleri = new VeritabaniIslemleri();
        
        String silinecekOgrenciNo = JOptionPane.showInputDialog(rootPane, "Lütfen silmek istediğiniz öğrenciye ait No bilgisini giriniz", "Öğrenci Sil", JOptionPane.QUESTION_MESSAGE);
        
        String query = "select ad, soyad from ogrenci where id=" + silinecekOgrenciNo;
        
        String ogrenciAdSoyad = null;
        try {
            ResultSet resultSet = veritabaniIslemleri.kayitGetir(query);
            
            if (resultSet.next()) {
                ogrenciAdSoyad = resultSet.getString("ad") + " " + resultSet.getString("soyad");
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "Kayıt getirilirken bir hata oluştu! Lütfen girdiğiniz No bilgisini kontrol ediniz!", "Hata!!!", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        int secim = JOptionPane.showConfirmDialog(rootPane, silinecekOgrenciNo + " No'lu, " + ogrenciAdSoyad + " adlı öğrenciyi silmek istiyor musunuz?", "Dikkat", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (secim == 0) {
            
            OgrenciSql ogrenciSql = new OgrenciSql();
            boolean silmeSonuc = ogrenciSql.sil(Long.parseLong(silinecekOgrenciNo));

            if (silmeSonuc)
                JOptionPane.showMessageDialog(rootPane, "Kayıt silindi", "İşlem Tamam", JOptionPane.INFORMATION_MESSAGE);
            else
                JOptionPane.showMessageDialog(rootPane, "Kayıt silinirken bir hata oluştu!", "Hata!!!", JOptionPane.ERROR_MESSAGE);
            
            tabloyuDoldur();
        }
    }
    
    private void ogrenciEkle(){
        
        frmOgrenciEkleGuncelle ekleGuncelle = new frmOgrenciEkleGuncelle(kullanici);
        ekleGuncelle.setVisible(true);
        this.setVisible(false);
    }
    
    private void ogrenciGuncelle(){
        
        VeritabaniIslemleri veritabaniIslemleri = new VeritabaniIslemleri();
        
        String guncellenecekOgrenciNo = JOptionPane.showInputDialog(rootPane, "Lütfen güncellemek istediğiniz öğrenciye ait No bilgisini giriniz", "Öğrenci Güncelle", JOptionPane.QUESTION_MESSAGE);
        
        String query = "select ad, soyad from ogrenci where id=" + guncellenecekOgrenciNo;
        
        try {
            ResultSet resultSet = veritabaniIslemleri.kayitGetir(query);
            
            if (!resultSet.next()) {
                JOptionPane.showMessageDialog(rootPane, "Kayıt getirilirken bir hata oluştu! Lütfen girdiğiniz No bilgisini kontrol ediniz!", "Hata!!!", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        frmOgrenciEkleGuncelle ekleGuncelle = new frmOgrenciEkleGuncelle(kullanici, guncellenecekOgrenciNo);
        ekleGuncelle.setVisible(true);
        this.setVisible(false);
    }
    
    private void oturumuKapat(){
        this.kullanici = null;
        this.setVisible(false);
        
        frmLogin login = new frmLogin(this, rootPaneCheckingEnabled);
        login.setVisible(true);
    }

    private void kullanicilariListele() {
        frmKullanicilariListele kullanicilariListele = new frmKullanicilariListele(kullanici);
        kullanicilariListele.setVisible(true);
        this.setVisible(false);
    }
    
}
